- hosts: backservers
  become: yes
  gather_facts: yes
  vars:
    users:
      - {name: AndreyPiganov, email: andrey.piganov@mail.ru}
  tasks:
    - name: update apt-get
      apt:
        force_apt_get: yes
        state: present
      tags: apt
    - name: add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker repository to apt
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: install dependencies
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - openssh-server
        - git
        - make
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose
        - nginx
        - npm
      tags: apt
    - name: Download and install nvm
      get_url:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh
        dest: ~/.nvm
      tags: apt
    - name: Install Node.js using nvm
      shell: |
        . ~/.nvm/nvm.sh
        nvm install {{ node_version }}
      environment:
        NVM_DIR: "{{ ansible_env.HOME }}/.nvm"
      vars:
        node_version: "20.11.1"
      tags: apt
    - name: check docker is active
      service:
        name: docker
        state: started
        enabled: yes
      tags: docker
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
      tags: docker
    - name: adding user to docker group
      user:
        name: andrey
        groups: docker
        append: yes
      tags: docker
    # - name: Install docker-compose
    #   get_url:
    #     url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
    #     dest: /usr/local/bin/docker-compose
    #     mode: 'u+x,g+x'
    # - name: Change file ownership, group and permissions
    #   ansible.builtin.file:
    #     path: /usr/local/bin/docker-compose
    #     owner: andrey
    #     group: andrey
    ###############
    # - name: Copy Nginx configuration file
    #   ansible.builtin.copy:
    #     src: files/nginx.conf
    #     dest: /etc/nginx/sites-available/default
    #   notify: Reload Nginx
    # - name: Ensure Nginx configuration is symlinked
    #   file:
    #     src: /etc/nginx/sites-available/default
    #     dest: /etc/nginx/sites-enabled/default
    #     state: link
    #   notify: Reload Nginx
    # - name: create users
    #   ansible.builtin.user:
    #     generate_ssh_key: yes
    #     ssh_key_bits: 2048
    #     ssh_key_file: .ssh/id_rsa
    #     name: "{{item.name}}"
    #     state: present
    #     append: yes
    #     create_home: yes
    #   loop: "{{users}}"
    # - name: add configs for users 
    #   ansible.builtin.template:
    #     src: files/.gitconfig.j2
    #     dest: "/home/{{item.name}}/.gitconfig"
    #     owner: "{{item.name}}"
    #     group: "{{item.name}}"
    #   loop: "{{users}}"
    # - name: create auth keys each users
    #   authorized_key:
    #     user: "{{item.name}}"
    #     key: "{{lookup('file', 'files/my_key.pub')}}"
    #     state: present
    #   loop: "{{users}}"
    # - name: init project in git
    #   git:
    #     repo: git@github.com:prjctz/todo-back.git
    #     dest: /home/andrey/backend
    #     version: main
    #     key_file: /home/andrey/.ssh/id_ed25519
    #     update: yes
    # - name: start Docker-compose 
    #   community.general.docker_compose:
    #     project_src: /home/andrey/backend
    #     project_name: todo-back
    #     state: present
    ################
  # handlers:
  #   - name: Reload Nginx
  #     service:
  #       name: nginx
  #       state: reloaded